import requests

indirizzo_servizio = "127.0.0.1"


def register_idor():

    data = {
        'utente' : 'antonio',
        'password' : 'antonio'
    }
    session = requests.Session()
    response = session.post(f'http://{indirizzo_servizio}:8000/register', data = data)
    if response.ok:
        print("Registrazione riuscita!")
    else:
        print(f"Registrazione non riuscita! Codice di stato: {response.status_code}")




def login_idor():

    data = {
        'utente' : 'antonio',
        'password' : 'antonio'
    }
    session = requests.Session()
    response = session.post(f'http://{indirizzo_servizio}:8000/login', data = data)
    if response.ok:
        print("Login riuscito!")
    else:
        print(f"Login non riuscito! Codice di stato: {response.status_code}")

    return session




def numero_valido_idor(numero, riga, colonna, griglia):
    # Per controllare se il numero inserito è valido,
    # dobbiamo controllare:
    # 1. Se il numero inserito non si ripete nella riga
    # 2. Se il numero inserito non si ripete nella colonna
    # 3. Se il numero inserito non si ripete nella sottogriglia 3x3
    # Se una di queste condizioni fallisce, il numero non può essere inserito

    # Condizione 1. Riga
    if numero in griglia[riga]:
        return False
    
    # Condizione 2. Colonna
    for riga_variabile in range(9):
        if griglia[riga_variabile][colonna] == numero:
            return False
        
    # Condizione 3. Sottogriglia 3x3
    # Determiniamo a quale sottogriglia appartiene 
    # la casella che vogliamo riempire
    # Quest'operazione ci restituisce la riga iniziale della sottogriglia
    # Es. Riga = 7 -> (7 // 3) * 3 = 6
    riga_sottogriglia = (riga // 3) * 3
    # Es. Colonna = 5 -> (5 // 3) * 3 = 3
    colonna_sottogriglia = (colonna // 3) * 3
    for i in range(riga_sottogriglia, riga_sottogriglia + 3):
        for j in range(colonna_sottogriglia, colonna_sottogriglia + 3):
            if griglia[i][j] == numero:
                return False
    
    return True



def risolutore_idor(griglia):
    # Risolutore per sudoku, serve per verificare se la rimozione dalla griglia funziona
    # Iteriamo con due cicli for, uno per le righe, uno per le colonne
    for riga in range(9):
        for colonna in range(9):
            # Troviamo la prima cella vuota
            if griglia[riga][colonna] == 0:
                for numero in range(1, 10):
                    # Controlliamo che sia possibile inserire
                    # il numero tramite la funzione
                    # e in tal caso lo inseriamo
                    if numero_valido_idor(numero, riga, colonna, griglia):
                        griglia[riga][colonna] = numero 
                        # Effettuiamo una chiamata ricorsiva, per valutare se è
                        # possibile inserire QUEL numero in quella determinata casella
                        # passando alla casella successiva; se nella casella successiva
                        # non ci sono numeri validi, si ritorna alla cella precedente
                        # la si rimette a 0 e si riprova con un altro numero
                        if risolutore_idor(griglia):
                            return True
                        griglia[riga][colonna] = 0   
                    # Qui si arriva quando non ci sono più numeri nella lista
                    # Quindi il numero inserito in precedenza non va bene, e si deve
                    # tornare alla cella precedente
                return False  
    # Se non ci sono celle vuote, la griglia è completa
    return True  